npm install react-router-dom jwt-decode axios

src/api.js
import axios from 'axios';

const api = axios.create({
  baseURL: 'http://localhost:8000/', // your Django server
});

api.interceptors.request.use(config => {
  const token = localStorage.getItem('access_token');
  if (token) {
    config.headers['Authorization'] = `Bearer ${token}`;
  }
  return config;
});

export default api;

src/protectedRoute.js
import { Navigate } from 'react-router-dom';

export default function PrivateRoute({ children }) {
  const token = localStorage.getItem('access_token');
  return token ? children : <Navigate to="/login" />;
}

src/components/navbar.js
import { Link, useNavigate } from 'react-router-dom';
import jwtDecode from 'jwt-decode';

export default function Navbar() {
  const navigate = useNavigate();
  const token = localStorage.getItem('access_token');
  let role = null;
  if (token) {
    const decoded = jwtDecode(token);
    role = decoded.role;
  }

  const logout = () => {
    localStorage.removeItem('access_token');
    navigate('/login');
  };

  return (
    <nav>
      <Link to="/books">Books</Link>
      {token ? (
        <>
          {role === 'librarian' && <Link to="/create-book">Create Book</Link>}
          <button onClick={logout}>Logout</button>
        </>
      ) : (
        <>
          <Link to="/login">Login</Link>
          <Link to="/register">Register</Link>
        </>
      )}
    </nav>
  );
}

src/components/booklistpage.js
import { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import api from '../api';

export default function BookListPage() {
  const [books, setBooks] = useState([]);

  useEffect(() => {
    api.get('books/')
      .then(res => setBooks(res.data))
      .catch(err => console.error(err));
  }, []);

  return (
    <div>
      <h2>Book List</h2>
      {books.map(book => (
        <div key={book.id}>
          <Link to={`/books/${book.id}`}>{book.title}</Link>
        </div>
      ))}
    </div>
  );
}

src/components/bookdetailpage.js
import { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import api from '../api';
import jwtDecode from 'jwt-decode';

export default function BookDetailPage() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [book, setBook] = useState(null);
  const token = localStorage.getItem('access_token');
  const role = token ? jwtDecode(token).role : null;

  useEffect(() => {
    api.get(`books/${id}/`)
      .then(res => setBook(res.data))
      .catch(err => console.error(err));
  }, [id]);

  const handleBorrow = () => {
    api.post(`books/${id}/borrow-return/?action=borrow`)
      .then(() => alert('Book borrowed'))
      .catch(err => console.error(err));
  };

  const handleReturn = () => {
    api.post(`books/${id}/borrow-return/?action=return`)
      .then(() => alert('Book returned'))
      .catch(err => console.error(err));
  };

  const handleDelete = () => {
    api.delete(`books/${id}/`)
      .then(() => {
        alert('Book deleted');
        navigate('/books');
      })
      .catch(err => console.error(err));
  };

  if (!book) return <div>Loading...</div>;

  return (
    <div>
      <h2>{book.title}</h2>
      <p>Author: {book.author}</p>
      <p>{book.description}</p>
      {role !== 'librarian' && (
        <>
          {book.available ? (
            <button onClick={handleBorrow}>Borrow</button>
          ) : (
            <button onClick={handleReturn}>Return</button>
          )}
        </>
      )}
      {role === 'librarian' && (
        <>
          <button onClick={() => navigate(`/edit-book/${book.id}`)}>Edit</button>
          <button onClick={handleDelete}>Delete</button>
        </>
      )}
    </div>
  );
}

sec/components/bookcreatepage.js
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import api from '../api';

export default function CreateBookPage() {
  const [title, setTitle] = useState('');
  const [author, setAuthor] = useState('');
  const [description, setDescription] = useState('');
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();
    api.post('books/', { title, author, description })
      .then(() => {
        alert('Book created');
        navigate('/books');
      })
      .catch(err => console.error(err));
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Create Book</h2>
      <input value={title} onChange={e => setTitle(e.target.value)} placeholder="Title" required />
      <input value={author} onChange={e => setAuthor(e.target.value)} placeholder="Author" required />
      <textarea value={description} onChange={e => setDescription(e.target.value)} placeholder="Description" required />
      <button type="submit">Create</button>
    </form>
  );
}

src/components/loginpage.js
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import api from '../api';

export default function LoginPage() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();
    api.post('login/', { username, password })
      .then(res => {
        localStorage.setItem('access_token', res.data.access);
        navigate('/books');
      })
      .catch(err => alert('Login failed'));
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Login</h2>
      <input value={username} onChange={e => setUsername(e.target.value)} placeholder="Username" required />
      <input type="password" value={password} onChange={e => setPassword(e.target.value)} placeholder="Password" required />
      <button type="submit">Login</button>
    </form>
  );
}

src/components/registerpage.js
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import api from '../api';

export default function RegisterPage() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [role, setRole] = useState('member');
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();
    api.post('register/', { username, password, role })
      .then(() => {
        alert('Registered successfully');
        navigate('/login');
      })
      .catch(err => console.error(err));
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Register</h2>
      <input value={username} onChange={e => setUsername(e.target.value)} placeholder="Username" required />
      <input type="password" value={password} onChange={e => setPassword(e.target.value)} placeholder="Password" required />
      <select value={role} onChange={e => setRole(e.target.value)}>
        <option value="member">Member</option>
        <option value="librarian">Librarian</option>
      </select>
      <button type="submit">Register</button>
    </form>
  );
}

src/app.js
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import BookListPage from './components/BookListPage';
import BookDetailPage from './components/BookDetailPage';
import CreateBookPage from './components/CreateBookPage';
import LoginPage from './components/LoginPage';
import RegisterPage from './components/RegisterPage';
import PrivateRoute from './PrivateRoute';

export default function App() {
  return (
    <BrowserRouter>
      <Navbar />
      <Routes>
        <Route path="/books" element={<PrivateRoute><BookListPage /></PrivateRoute>} />
        <Route path="/books/:id" element={<PrivateRoute><BookDetailPage /></PrivateRoute>} />
        <Route path="/create-book" element={<PrivateRoute><CreateBookPage /></PrivateRoute>} />
        <Route path="/login" element={<LoginPage />} />
        <Route path="/register" element={<RegisterPage />} />
      </Routes>
    </BrowserRouter>
  );


src/index.js
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(
  <App />,
  document.getElementById('root')
);


src/index.css
/* index.css */
body {
  font-family: Arial, sans-serif;
  padding: 20px;
  background-color: #f7f7f7;
}

nav {
  margin-bottom: 20px;
}

nav a, nav button {
  margin-right: 10px;
  text-decoration: none;
  color: blue;
  font-weight: bold;
}

form {
  display: flex;
  flex-direction: column;
  max-width: 400px;
}

form input, form textarea, form select {
  margin-bottom: 10px;
  padding: 10px;
}

button {
  padding: 10px;
  background-color: blue;
  color: white;
  border: none;
  cursor: pointer;
}

index js
import './index.css';
