import React, { useEffect, useState } from 'react';
import { useAuth } from '../AuthContext';
import { useNavigate } from 'react-router-dom';

function YourBooks() {
  const { isAuthenticated, loading } = useAuth();
  const navigate = useNavigate();
  const [books, setBooks] = useState([]);
  const [error, setError] = useState(null);
  const [selectedPdf, setSelectedPdf] = useState(null);

  useEffect(() => {
    if (loading) return;
    if (!isAuthenticated) {
      navigate('/login');
      return;
    }

    const fetchYourBooks = async () => {
      try {
        const response = await fetch('http://localhost:8000/api/your-books/', {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('access_token')}`,
          },
        });
        if (response.ok) {
          const data = await response.json();
          setBooks(data);
        } else {
          throw new Error('Failed to load your books');
        }
      } catch (err) {
        setError(err.message);
      }
    };

    fetchYourBooks();
  }, [isAuthenticated, loading, navigate]);

  const handleRead = (pdfPath) => {
    const sanitized = `http://localhost:8000/api${pdfPath}#toolbar=0&navpanes=0&scrollbar=0`;
    setSelectedPdf(sanitized);
  };

  const handleClose = () => {
    setSelectedPdf(null);
  };

  return (
    <div className="container mt-5">
      {error && <div className="alert alert-danger">{error}</div>}

      <div className="row">
        {books.length === 0 ? (
          <div className="col-12 text-center">
            <p>You have no borrowed books.</p>
          </div>
        ) : (
          books.map((book) => (
            <div key={book.id} className="col-md-3 mb-4">
              <div className="card h-100">
                <img
                  src={book.image ? `http://localhost:8000/api${book.image}` : '/media/book_images/default.jpg'}
                  className="card-img-top"
                  alt={book.title}
                />
                <div className="card-body d-flex flex-column">
                  <h5 className="card-title">{book.title}</h5>
                  <p className="card-text">{book.description}</p>
                  <button
                    className="btn btn-primary mt-auto"
                    onClick={() => handleRead(book.pdf)}
                  >
                    Read
                  </button>
                </div>
              </div>
            </div>
          ))
        )}
      </div>

      {/* PDF Modal */}
      {selectedPdf && (
        <div className="modal fade show d-block" tabIndex="-1" role="dialog" style={{ backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>
          <div className="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div className="modal-content">
              <div className="modal-header">
                <h5 className="modal-title">Reading Book</h5>
                <button type="button" className="btn-close" onClick={handleClose}></button>
              </div>
              <div className="modal-body" style={{ height: '80vh' }}>
                <iframe
                  src={selectedPdf}
                  title="PDF Reader"
                  style={{ width: '100%', height: '100%', border: 'none' }}
                ></iframe>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default YourBooks;
